/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package stokper;


import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.sql.SQLException; // hata yakalama
import java.sql.Statement; // sabit sql değerler
import java.util.logging.Level; //netbeans
import java.util.logging.Logger;//netbeans
import javax.swing.JTable; 
import javax.swing.table.DefaultTableModel;
import javax.swing.table.DefaultTableCellRenderer;
/**
 *
 * @author sniff
 */
public class urunSil extends javax.swing.JFrame {

    /**
     * Creates new form urunSil
     */
    public urunSil() {
        initComponents();
        this.setLocationRelativeTo(null);
        uGrCombo.addItem("Temel Gıda");
        uGrCombo.addItem("NoneFood"); //combobox için liste itemi ekleme
        uGrCombo.addItem("Temizlik");
        uGrCombo.addItem("Manav");
        uGrCombo.addItem("Şarküteri");
        uGrCombo.addItem("Kasap");
        uGrCombo.addItem("Balık");
        uBrCombo.addItem("KG");
        uBrCombo.addItem("Adet");
        
       
            
            try {
                StokVeriGöster veriCekici = new StokVeriGöster();
                veriCekici.verileriGetir(ktablo);
            } catch (Exception ex) {
                Logger.getLogger(urunSil.class.getName()).log(Level.SEVERE, null, ex); //ide netbeans tarafından sunulan hata yakalama kodları
            }
        
        DefaultTableCellRenderer cr = new DefaultTableCellRenderer();
            cr.setHorizontalAlignment(DefaultTableCellRenderer.CENTER); 


            for (int i = 0; i < ktablo.getColumnCount(); i++) {
            ktablo.getColumnModel().getColumn(i).setCellRenderer(cr);// tablodaki verileri ortalama
            }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addBTN = new javax.swing.JButton();
        upBTN = new javax.swing.JButton();
        backbtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ktablo = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        uBrCombo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        miktarTXT = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        urTXT = new javax.swing.JTextField();
        baTXT = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        fiyatTXT = new javax.swing.JTextField();
        uGrCombo = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(950, 653));

        addBTN.setBackground(new java.awt.Color(51, 255, 51));
        addBTN.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        addBTN.setText("Ekle");
        addBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBTNActionPerformed(evt);
            }
        });

        upBTN.setBackground(new java.awt.Color(51, 51, 255));
        upBTN.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        upBTN.setForeground(new java.awt.Color(255, 255, 255));
        upBTN.setText("Güncelle");
        upBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        upBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upBTNActionPerformed(evt);
            }
        });

        backbtn.setText("Geri");
        backbtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        jLabel2.setText("ÜRÜN EKLE, SİL VE GÜNCELLE");

        ktablo.setBackground(new java.awt.Color(51, 51, 51));
        ktablo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        ktablo.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        ktablo.setForeground(new java.awt.Color(153, 153, 153));
        ktablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "BARKOD", "ÜRÜN ADI", "ÜRÜN GRUBU", "MİKTAR", "BİRİM", "SATIŞ FİYATI"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ktablo.setToolTipText("");
        ktablo.setGridColor(new java.awt.Color(0, 0, 0));
        ktablo.setRowHeight(35);
        ktablo.setRowMargin(1);
        ktablo.setRowSelectionAllowed(false);
        ktablo.setSelectionBackground(new java.awt.Color(51, 102, 255));
        ktablo.setShowGrid(true);
        ktablo.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(ktablo);

        jLabel8.setFont(new java.awt.Font("Bahnschrift", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 51));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("StokPer");

        jLabel3.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel3.setText("Satış Fiyatı");

        jLabel4.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel4.setText("Kategori");

        jLabel6.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel6.setText("Ürün Adı");

        jLabel7.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel7.setText("Miktar");

        miktarTXT.setPreferredSize(null);
        miktarTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miktarTXTActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel5.setText("Birim");

        urTXT.setPreferredSize(null);

        baTXT.setPreferredSize(null);
        baTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baTXTActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel1.setText("Barkod");

        fiyatTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiyatTXTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(baTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uGrCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(miktarTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3)
                        .addComponent(jLabel6)
                        .addComponent(fiyatTXT)
                        .addComponent(jLabel5)
                        .addComponent(urTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(uBrCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(baTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(urTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fiyatTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(miktarTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(uGrCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uBrCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel2.setBorder(new javax.swing.border.LineBorder(java.awt.Color.lightGray, 2, true));

        jTextArea1.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("Ürün Ekle,Güncelle işlemleri yetkili personel tarafından işletmenin envanter ve stok kontrolü yapılmasını sağlayan bölümdür.\n\nÜrün Ekle, Güncelle işlemleri aşağıda ki işlemleri yapmaktadır;\n\n-Ürün sınıflarına göre, stoğa veri ekleme ve güncelleme\n\nÜrün Ekle,Güncelle işlemlerine \"Admin\" ve \"Yönetici\" yetkisine \nsahip kullanıcılar tarafından erişilebilir haldedir.");
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(upBTN))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 77, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel8)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(addBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(upBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public class StokVeriGöster {

    
    public void verileriGetir(JTable ktablo) throws Exception {
 

        //verileriGetir metodu ile anlık olarak veritabanında ki istediğimiz 
        DefaultTableModel model = (DefaultTableModel) ktablo.getModel();

        try {
            // 
            Connection conn = VeritabaniBaglantisi.baglantiAc(); //veritabanı bağlantısını oluşturduğumuz class ı çağırarak vt bağlantısını başlatıyoruz.
            Statement stmt = conn.createStatement(); //sabit sqller için bu komutu kullanırken
                                                    //kullanıcı girişi gerektiren değişkenli sqller için PreparedStatement kullanıyoruz.
            ResultSet rs = stmt.executeQuery("SELECT * FROM urunler"); // urunler tablosunda ki bütün verileri sorguluyoruz. ve bu verileri resultset adlı rs değişkenine atıyoruz.

           
            while (rs.next()) { // burada rs.next() değeri true geldikçe yani bir veri girişi oldukça while ile döngüyü başlatıyor her satırda vt deki verileri tabloya yazdırıyoruz.
                Object[] row = {
                        rs.getInt("id"),         // burada ki sıra önemli zira tabloda belirlediğimiz sütunları buradaki sıraya göre ayarlıyoruz.
                        rs.getString("ad"),
                        rs.getString("ugrup"),     
                        rs.getString("stok"),   
                        rs.getString("birim"),   
                        rs.getString("fiyat")    
                };
                model.insertRow(0, row); //sıralamayı en üstten başlatır.
            }

            // Bağlantıları burada kapatarak veri çakışmasının önüne geçiyoruz.
            rs.close(); 
            stmt.close();
            conn.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Veri çekme hatası: " + e.getMessage()); //ide netbeans tarafından sunulan hata yakalama kodları 
        }
    }
    }
    private void addBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBTNActionPerformed
        String miktar = miktarTXT.getText().trim();
        String fiyat = fiyatTXT.getText().trim();
        String birim = (String) uBrCombo.getSelectedItem(); // textfield'ları içeriğine göre stringe çevirip değişkenlere atıyoruz. gettext içeriğinde ki veriyi almak
        String ugrup = (String) uGrCombo.getSelectedItem(); // combobox için getselecteditem seçili olan veri demektir
        String barkod = baTXT.getText().trim(); //trim sağdan soldan boşlukları kırpıyoruz.
        String urad = urTXT.getText().trim();

        if ((miktar.isEmpty() || fiyat.isEmpty() || barkod.isEmpty() || urad.isEmpty())) {
            JOptionPane.showMessageDialog(this, "Lütfen boş alanları doldurunuz.");  // textfield dolu boş kontrolü
            return;
        }

        try (Connection conn = VeritabaniBaglantisi.baglantiAc()){
            String sql = "INSERT INTO urunler (id, ugrup, stok, birim, fiyat, ad) VALUES (?, ?, ?, ?, ?, ?)";
            String sqlsatis = "INSERT INTO satislar (urun_id, adet, ad, birim, ugrup, fiyat, islem) VALUES (?, ?, ?, ?, ?, ?, ?)";
            
           
            PreparedStatement ps = conn.prepareStatement(sqlsatis);
            
            
            var as = conn.prepareStatement(sql);
            as.setString(1, barkod);
            as.setString(2, ugrup);
            as.setString(3, miktar);
            as.setString(4, birim);
            as.setString(5, fiyat);
            as.setString(6, urad);
            var sa = as.executeUpdate(); // veri okumak için executeQuery kullanırken güncelleme ekleme silme işlemleri için bu komutu kullanıyoruz.
            
            String islem = "Ürün Ekleme";
            ps.setString(1, barkod);
            ps.setString(2, miktar);
            ps.setString(3, urad);
            ps.setString(4, birim);
            ps.setString(5, ugrup);
            ps.setDouble(6, Double.parseDouble(fiyat));
            ps.setString(7, islem);
            ps.executeUpdate();
            

            if ((sa > 0)) {
                JOptionPane.showMessageDialog(this, "İşlem Başarılı");
                StokVeriGöster veriCekici = new StokVeriGöster();  //eğer vt de mevcut sorguda hiç bir satır etkilenmediyse 0 döndürecektir ve else opsiyonu devreye girecektir.
                veriCekici.verileriGetir(ktablo);

            }else{
                JOptionPane.showMessageDialog(this, "Veri girişi sağlanamadı!");
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Hata Oluştu");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_addBTNActionPerformed

    private void upBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upBTNActionPerformed
        int selectedRow = ktablo.getSelectedRow();
        String miktar = miktarTXT.getText().trim();
        String fiyat = fiyatTXT.getText().trim();
        String birim = (String) uBrCombo.getSelectedItem();
        String ugrup = (String) uGrCombo.getSelectedItem(); 
        String barkod = baTXT.getText().trim();
        String urad = urTXT.getText().trim();

        if ((miktar.isEmpty() || fiyat.isEmpty() || barkod.isEmpty() || urad.isEmpty())) {
            JOptionPane.showMessageDialog(this, "Lütfen boş alanları doldurunuz.");
            return;
        }

        if (selectedRow != 1) { 
            String selectedID = ktablo.getValueAt(selectedRow, 0).toString();
            int onay = JOptionPane.showConfirmDialog(this, "Bu veriyi güncellemeyi onaylıyor musun?");

            if (onay == JOptionPane.YES_OPTION) {
                try {
                    Connection conn = VeritabaniBaglantisi.baglantiAc();
                    String sql = "UPDATE urunler SET id = ?, ugrup = ?, stok = ?, birim = ?, fiyat = ?, ad = ? WHERE id = ?"; //set ile mevcut sütunları yeni verilerle değiştiriyoruz.
                    var as = conn.prepareStatement(sql);
                    as.setString(1, barkod);
                    as.setString(2, ugrup);
                    as.setString(3, miktar);
                    as.setString(4, birim);
                    as.setString(5, fiyat);
                    as.setString(6, urad);
                    as.setString(7, selectedID);
                    var sa = as.executeUpdate();

                    if ((sa > 0)) {
                        JOptionPane.showMessageDialog(this, "Veri başarıyla güncellendi!");
                        StokVeriGöster veriCekici = new StokVeriGöster();
                        veriCekici.verileriGetir(ktablo);

                    }else{
                        JOptionPane.showMessageDialog(this, "Güncelleme işlemi başarısız! ");
                    }
                    conn.close();
                }catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Hata: " +e.getMessage());
                }
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_upBTNActionPerformed

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        this.dispose();
        new MainFrame().setVisible(true);
    }//GEN-LAST:event_backbtnActionPerformed

    private void miktarTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miktarTXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_miktarTXTActionPerformed

    private void baTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baTXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_baTXTActionPerformed

    private void fiyatTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiyatTXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fiyatTXTActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(urunSil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(urunSil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(urunSil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(urunSil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new urunSil().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBTN;
    private javax.swing.JTextField baTXT;
    private javax.swing.JButton backbtn;
    private javax.swing.JTextField fiyatTXT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTable ktablo;
    private javax.swing.JTextField miktarTXT;
    private javax.swing.JComboBox<String> uBrCombo;
    private javax.swing.JComboBox<String> uGrCombo;
    private javax.swing.JButton upBTN;
    private javax.swing.JTextField urTXT;
    // End of variables declaration//GEN-END:variables
}
